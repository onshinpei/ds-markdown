import type { StreamingItem } from './types';

type StreamingType = 'ai-chat' | 'code-generation' | 'documentation';

// English streaming data
export const streamingData: Record<StreamingType, StreamingItem[]> = {
  'ai-chat': [
    { content: 'ðŸ¤” Analyzing your question...', type: 'thinking' },
    { content: '\n\n', type: 'answer' },
    { content: '# AI Assistant Answer\n\n', type: 'answer' },
    { content: 'Based on your question, let me provide a detailed answer:\n\n', type: 'answer' },
    { content: '## Key Features\n\n', type: 'answer' },
    { content: '- âš¡ **High Performance**: Based on optimized rendering engine\n', type: 'answer' },
    { content: '- ðŸŽ¬ **Smooth Animation**: Supports multiple typing effects\n', type: 'answer' },
    { content: '- ðŸŽ¯ **Perfect Compatibility**: Supports complete Markdown syntax\n', type: 'answer' },
    { content: '- ðŸ”§ **Easy Integration**: Simple API design\n\n', type: 'answer' },
    { content: '## Usage Recommendations\n\n', type: 'answer' },
    { content: 'Recommended for the following scenarios:\n\n', type: 'answer' },
    { content: '1. **AI Chat Interface** - Simulate real conversation experience\n', type: 'answer' },
    { content: '2. **Code Demonstration** - Step-by-step code logic display\n', type: 'answer' },
    { content: '3. **Documentation Display** - Dynamic document content presentation\n\n', type: 'answer' },
    { content: 'Hope this answer helps you! ðŸŽ‰', type: 'answer' },
  ],
  'code-generation': [
    { content: 'ðŸ’» Generating code...', type: 'thinking' },
    { content: '\n\n', type: 'answer' },
    { content: '# React Component Example\n\n', type: 'answer' },
    { content: '```tsx\n', type: 'answer' },
    { content: "import React, { useState } from 'react';\n", type: 'answer' },
    { content: "import DsMarkdown from 'ds-markdown';\n\n", type: 'answer' },
    { content: 'function ChatComponent() {\n', type: 'answer' },
    { content: '  const [messages, setMessages] = useState([]);\n\n', type: 'answer' },
    { content: '  const handleNewMessage = (content) => {\n', type: 'answer' },
    { content: '    setMessages(prev => [...prev, content]);\n', type: 'answer' },
    { content: '  };\n\n', type: 'answer' },
    { content: '  return (\n', type: 'answer' },
    { content: '    <div className="chat-container">\n', type: 'answer' },
    { content: '      {messages.map((msg, index) => (\n', type: 'answer' },
    { content: '        <DsMarkdown key={index} interval={20}>\n', type: 'answer' },
    { content: '          {msg}\n', type: 'answer' },
    { content: '        </DsMarkdown>\n', type: 'answer' },
    { content: '      ))}\n', type: 'answer' },
    { content: '    </div>\n', type: 'answer' },
    { content: '  );\n', type: 'answer' },
    { content: '}\n', type: 'answer' },
    { content: '```\n\n', type: 'answer' },
    { content: 'This component demonstrates how to integrate ds-markdown into a chat application.', type: 'answer' },
  ],
  documentation: [
    { content: 'ðŸ“š Generating documentation...', type: 'thinking' },
    { content: '\n\n', type: 'answer' },
    { content: '# ds-markdown Usage Guide\n\n', type: 'answer' },
    { content: '## Quick Start\n\n', type: 'answer' },
    { content: '### 1. Install Dependencies\n\n', type: 'answer' },
    { content: '```bash\n', type: 'answer' },
    { content: 'npm install ds-markdown\n', type: 'answer' },
    { content: '```\n\n', type: 'answer' },
    { content: '### 2. Basic Usage\n\n', type: 'answer' },
    { content: '```tsx\n', type: 'answer' },
    { content: "import DsMarkdown from 'ds-markdown';\n", type: 'answer' },
    { content: "import 'ds-markdown/style.css';\n\n", type: 'answer' },
    { content: 'function App() {\n', type: 'answer' },
    { content: '  return (\n', type: 'answer' },
    { content: '    <DsMarkdown interval={20}>\n', type: 'answer' },
    { content: '      # Hello World\n', type: 'answer' },
    { content: '      This is a **typing animation** example.\n', type: 'answer' },
    { content: '    </DsMarkdown>\n', type: 'answer' },
    { content: '  );\n', type: 'answer' },
    { content: '}\n', type: 'answer' },
    { content: '```\n\n', type: 'answer' },
    { content: '### 3. Advanced Configuration\n\n', type: 'answer' },
    { content: 'Supports various configuration options including typing speed, themes, math formulas, etc.', type: 'answer' },
  ],
};
